// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"
	"time"
	
	"TikTok/apps/video/rpc/internal/logic"
	"TikTok/apps/video/rpc/internal/svc"
	"TikTok/apps/video/rpc/video"
)

type VideoServer struct {
	svcCtx *svc.ServiceContext
	video.UnimplementedVideoServer
}

func NewVideoServer(svcCtx *svc.ServiceContext) *VideoServer {
	return &VideoServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServer) GetWorkCountByUserId(ctx context.Context, in *video.WorkCountByUserIdReq) (*video.WorkCountByUserIdResp, error) {
	l := logic.NewGetWorkCountByUserIdLogic(ctx, s.svcCtx)
	return l.GetWorkCountByUserId(in)
}

func (s *VideoServer) GetFeed(ctx context.Context, in *video.FeedReq) (*video.FeedResp, error) {
	l := logic.NewGetFeedLogic(ctx, s.svcCtx)
	return l.GetFeed(in)
}

func (s *VideoServer) SendPublishAction(ctx context.Context, in *video.PublishActionReq) (*video.PublishActionResp, error) {
	l := logic.NewSendPublishActionLogic(ctx, s.svcCtx)
	return l.SendPublishAction(in)
}

func (s *VideoServer) GetPublishList(ctx context.Context, in *video.PublishListReq) (*video.PublishListResp, error) {
	l := logic.NewGetPublishListLogic(ctx, s.svcCtx)
	return l.GetPublishList(in)
}

func (s *VideoServer) Detail(ctx context.Context, in *video.BasicVideoInfoReq) (*video.BasicVideoInfoResp, error) {
	l := logic.NewDetailLogic(ctx, s.svcCtx)
	return l.Detail(in)
}

// api中interaction中点赞和评论会调用
func (s *VideoServer) NotifyHotVideo(ctx context.Context, in *video.NotifyHotVideoReq) (resp *video.NotifyHotVideoResp, err error) {
	resp = &video.NotifyHotVideoResp{}
	// 现在只有点赞、评论都是1分
	hotVideoLogic := logic.NewHotVideoLogic(ctx, s.svcCtx)
	scores := []logic.VideoScore{{VideoId: in.VideoId,Score:1}}
	ctime := time.Now()
	err = hotVideoLogic.ScoresIncr(scores,ctime)
	return
}

// 是否是热门视频
func (s *VideoServer) CheckHotVideo(ctx context.Context, in *video.CheckHotVideoReq) (*video.CheckHotVideoResp, error) {
	resp := &video.CheckHotVideoResp{}
	l := logic.NewHotVideoLogic(ctx, s.svcCtx)
	isHotVideo ,err := l.IsHotVideo(in.VideoId)
	if err != nil {
		return resp,err
	}
	if isHotVideo {
		resp.IsHotVideo = 1
	}
	return resp,nil
}

