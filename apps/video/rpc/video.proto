syntax = "proto3";

package video;
option go_package = "./video";

message WorkCountByUserIdReq {
  int64 UserId = 1; // 用户id
}
message WorkCountByUserIdResp {
  int64 WorkCount = 1; // 发布视频数量
}

message BasicVideoInfo {
  int64 Id = 1;        // 视频唯一标识
  int64 UserId = 2;    // 视频作者信息
  string PlayUrl = 3;  // 视频播放地址
  string CoverUrl = 4; // 视频封面地址
  string Title = 5;    // 视频标题
}

message FeedReq {
  optional int64 LatestTime =
      1; // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
  optional int64 UserId = 2; // 可选参数，调用接口的用户id
}

message FeedResp {
  repeated BasicVideoInfo VideoList = 1; // 视频列表
  optional int64 NextTime =
      2; // 本次返回的视频中，发布最早的时间，作为下次请求时的LatestTime
}

message PublishActionReq {
  int64 UserId = 1;    // 调用接口的用户id
  string PlayUrl = 2;  // 视频播放地址
  string CoverUrl = 3; // 视频封面地址
  string Title = 4;    // 视频标题
}

message PublishActionResp {
  bool IsSucceed = 1; // true-成功，false-失败
}

message PublishListReq {
  int64 UserId = 1; // 用户id
}

message PublishListResp {
  repeated BasicVideoInfo VideoList = 1; // 用户发布的视频列表
}

message BasicVideoInfoReq {
  int64 VideoId = 1; // 需要展示信息视频id
}

message BasicVideoInfoResp {
  BasicVideoInfo Video = 1; // 视频信息
}


// 热门视频事件通知
message NotifyHotVideoReq {
  int64 videoId = 1; // 视频id
  int64 userId = 2; // 用户id
  int32 ActionType = 3; // 1-点赞，2-取消点赞
}

message NotifyHotVideoResp { }

// 校验热门视频请求
message CheckHotVideoReq {
  int64 videoId = 1; // 视频id
}

message CheckHotVideoResp {
  int32 isHotVideo = 1; // 是否热门视频
}
message VideoPusherReq {
  int64 videoId = 1; // 视频id
}

message VideoPusherResp {}
service Video {
  rpc GetWorkCountByUserId(WorkCountByUserIdReq)
      returns (WorkCountByUserIdResp);
  rpc GetFeed(FeedReq) returns (FeedResp);
  rpc SendPublishAction(PublishActionReq) returns (PublishActionResp);
  rpc GetPublishList(PublishListReq) returns (PublishListResp);
  rpc Detail(BasicVideoInfoReq) returns (BasicVideoInfoResp);
  // 视频事件通知,如:点赞、评论、分享
  rpc NotifyHotVideo(NotifyHotVideoReq) returns(NotifyHotVideoResp);
  // 校验热门视频
  rpc CheckHotVideo(CheckHotVideoReq) returns(CheckHotVideoResp);
  rpc VideoPusher(VideoPusherReq) returns(VideoPusherResp);
}