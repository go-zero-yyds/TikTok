syntax = "proto3";

package user;
option go_package="./user";


message RegisterReq {
  string Username = 1; // 注册用户名，最长32个字符
  string Password = 2; // 密码，最长32个字符
}

message RegisterResp {
  int64 UserId = 1; // 用户id
}

message LoginReq {
  string Username = 1; // 登录用户名
  string Password = 2; // 登录密码
}

message LoginResp {
  int64 UserId = 1; // 用户id
}

message BasicUserInfoReq {
  int64 UserId = 1; // 需要展示信息用户id
}
    
message BasicUserInfoResp {
  BasicUserInfo User = 1; // 用户信息
}
    
message BasicUserInfo {
  int64 Id = 1; // 用户id
  string Name = 2; // 用户名称
  optional string Avatar = 3; // 用户头像
  optional string BackgroundImage = 4; // 用户个人页顶部大图
  string Signature = 5; // 个人简介
}

message SetAvatarReq {
  int64 UserId = 1; // 需要展示信息用户id
  string Url = 2; // 头像资源地址
}

message SetAvatarResp {
  bool IsSucceed = 1; // true-成功，false-失败
}

message SetBackgroundImageReq {
  int64 UserId = 1; // 需要展示信息用户id
  string Url = 2; // 背景图片资源地址
}

message SetBackgroundImageResp {
  bool IsSucceed = 1; // true-成功，false-失败
}

message SetSignatureReq {
  int64 UserId = 1; // 需要展示信息用户id
  string content = 2; // 个性签名内容
}

message SetSignatureResp {
  bool IsSucceed = 1; // true-成功，false-失败
}

service User {
  rpc Register(RegisterReq) returns (RegisterResp);
  rpc Login(LoginReq) returns (LoginResp);
  rpc Detail(BasicUserInfoReq) returns (BasicUserInfoResp);
  rpc SetAvatar(SetAvatarReq) returns (SetAvatarResp);
  rpc SetBackgroundImage(SetBackgroundImageReq) returns (SetBackgroundImageResp);
  rpc SetSignature(SetSignatureReq) returns (SetSignatureResp);
}